//#pragma once
//#include<iostream>
//extern int K;
//extern int Nv;
//extern int Ne_inner;
//extern int Ne_boundary;
//extern int Nfp;
//extern int Np;
//extern int cell_Nv;
//extern int cell_Nq;
//extern int two;
//extern int one;
//void ncdim_read();
//void ncvar_read(double *meshunion_data, std::string ncvarname);
//extern double*BoundaryEdge_FToE;
//extern double*BoundaryEdge_FToF;
//extern double*BoundaryEdge_FToM;
//extern double*BoundaryEdge_FToN1;
//extern double*BoundaryEdge_FToN2;
//extern double*BoundaryEdge_FToV;
//extern double*BoundaryEdge_ftype;
//extern double*BoundaryEdge_Js;
//extern double*BoundaryEdge_LAV;
//extern double*BoundaryEdge_M;
//extern double*BoundaryEdge_Ne;
//extern double*BoundaryEdge_Nfp;
//extern double*BoundaryEdge_nx;
//extern double*BoundaryEdge_ny;
//extern double*BoundaryEdge_nz;
//extern double*BoundaryEdge_r;
//extern double*BoundaryEdge_xb;
//extern double*BoundaryEdge_yb;
//extern double*cell_Dr;
//extern double*cell_Ds;
//extern double*cell_Dt;
//extern double*cell_EToV;
//extern double*cell_faceType;
//extern double*cell_Fmask;
//extern double*cell_invM;
//extern double*cell_LAV;
//extern double*cell_M;
//extern double*cell_N;
//extern double*cell_Nface;
//extern double*cell_Nfp;
//extern double*cell_Nfv;
////extern double*cell_Np;
////extern double*cell_Nq;
////extern double*cell_Nv;
//extern double*cell_r;
//extern double*cell_rq;
//extern double*cell_s;
//extern double*cell_sq;
//extern double*cell_t;
//extern double*cell_TNfp;
//extern double*cell_tq;
//extern double*cell_type;
//extern double*cell_V;
//extern double*cell_Vq;
//extern double*cell_vr;
//extern double*cell_vs;
//extern double*cell_vt;
//extern double*cell_wq;
//extern double*charLength;
//extern double*EToE;
//extern double*EToF;
//extern double*EToM;
//extern double*EToR;
//extern double*EToV;
//extern double*ind;
//extern double*InnerEdge_cell_Dr;
//extern double*InnerEdge_cell_Ds;
//extern double*InnerEdge_cell_Dt;
//extern double*InnerEdge_cell_faceType;
//extern double*InnerEdge_cell_Fmask;
//extern double*InnerEdge_cell_invM;
//extern double*InnerEdge_cell_invM;
//extern double*InnerEdge_cell_LAV;
//extern double*InnerEdge_cell_M;
//extern double*InnerEdge_cell_N;
//extern double*InnerEdge_cell_Nface;
////extern double*InnerEdge_cell_Nfp;
//extern double*InnerEdge_cell_Nfv;
//extern double*InnerEdge_cell_Np;
//extern double*InnerEdge_cell_Nq;
//extern double*InnerEdge_cell_Nv;
//extern double*InnerEdge_cell_r;
//extern double*InnerEdge_cell_rq;
//extern double*InnerEdge_cell_s;
//extern double*InnerEdge_cell_sq;
//extern double*InnerEdge_cell_t;
//extern double*InnerEdge_cell_TNfp;
//extern double*InnerEdge_cell_tq;
//extern double*InnerEdge_cell_type;
//extern double*InnerEdge_cell_V;
//extern double*InnerEdge_cell_Vq;
//extern double*InnerEdge_cell_vr;
//extern double*InnerEdge_cell_vs;
//extern double*InnerEdge_cell_vt;
//extern double*InnerEdge_cell_wq;
//extern double*InnerEdge_FToE;
//extern double*InnerEdge_FToF;
//extern double*InnerEdge_FToM;
//extern double*InnerEdge_FToN1;
//extern double*InnerEdge_FToN2;
//extern double*InnerEdge_FToV;
//extern double*InnerEdge_Js;
//extern double*InnerEdge_LAV;
//extern double*InnerEdge_M;
//extern double*InnerEdge_Ne;
//extern double*InnerEdge_Nfp;
//extern double*InnerEdge_nx;
//extern double*InnerEdge_ny;
//extern double*InnerEdge_nz;
//extern double*InnerEdge_r;
//extern double*J;
//extern double*K;
//extern double*LAV;
////extern double*Nv;
//extern double*rx;
//extern double*ry;
//extern double*rz;
//extern double*status;
//extern double*sx;
//extern double*sy;
//extern double*sz;
//extern double*tx;
//extern double*ty;
//extern double*type;
//extern double*tz;
//extern double*vx;
//extern double*vy;
//extern double*vz;
//extern double*x;
//extern double*xc;
//extern double*y;
//extern double*yc;
//extern double*z;
//extern double*zc;
